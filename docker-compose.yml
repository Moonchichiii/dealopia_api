version: '3.8'

services:
  # PostgreSQL with PostGIS for geospatial support
  db:
    image: postgis/postgis:15-3.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=dealopia
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 128M

  # Backend Django API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4
    volumes:
      - ./api:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - 8000
    environment:
      - DEBUG=False
      - DATABASE_URL=postgis://postgres:postgres@db:5432/dealopia
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 512M

  # Celery worker for background tasks
  celery:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: celery -A config worker -l info
    volumes:
      - ./api:/app
    environment:
      - DEBUG=False
      - DATABASE_URL=postgis://postgres:postgres@db:5432/dealopia
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - api
      - redis
    deploy:
      resources:
        limits:
          memory: 256M

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: celery -A config beat -l info
    volumes:
      - ./api:/app
    environment:
      - DEBUG=False
      - DATABASE_URL=postgis://postgres:postgres@db:5432/dealopia
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - api
      - redis
    deploy:
      resources:
        limits:
          memory: 128M

  # Frontend client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
    deploy:
      resources:
        limits:
          memory: 128M

  # Nginx for serving static files and routing
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - ./client/dist:/var/www/html
    depends_on:
      - api
      - client
    deploy:
      resources:
        limits:
          memory: 64M

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: